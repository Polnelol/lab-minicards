/* ===============
Функции scss START 
================== */

/* ===== Функция генерации svg иконок START ===== */
$data-svg-prefix: 'data:image/svg+xml;utf-8,';

@function str-replace( $string, $search, $replace ) {

	$index: str-index( $string, $search );

	@if $index {

		@return str-slice( $string, 1, $index - 1 ) + $replace + str_replace( str-slice( $string, $index + str-length( $search ) ), $search, $replace );
	}

	@return $string;
}

@function get-icon( $icon, $color: $white ) {
	
	@if 'color' != type-of( $color ) {
		
		@warn 'The requested color - "' + $color + '" - was not recognized as a Sass color value.';
		@return null;
	}

    // @if 'color-stroke' != type-of( $color-stroke ) {
		
	// 	@warn 'The requested color-stroke - "' + $color-stroke + '" - was not recognized as a Sass color-stroke value.';
	// 	@return null;
	// }
	
	@if map-has-key( $icons, $icon ) {

		$icon:        map-get( $icons, $icon );
		$placeholder: '%%COLOR%%';
        $placeholder-stroke: '%%COLOR-STROKE%%';
		$data-uri:    str-replace( url( $data-svg-prefix + $icon ), $placeholder, $color );

		@return str-replace( $data-uri, '#', '%23' );
        // @return str-replace( url( $data-svg-prefix + $icon ), $placeholder, $color )
	}
	
	@warn 'The requested icon - "' + $icon + '" - is not defined in the $icons map.';
	@return null;
}

/* Подключение

background: get-icon('svg_name', background_color);

Принимает два значения, имя иконки и цвета фона
Все иконки описаны в файле scss/base/_icons.scss */

/* ===== Функция генерации svg иконок END ===== */

/* =============
Функции scss END
================ */

